<Window x:Class="MatrixSwitcher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MatrixSwitcher"
        xmlns:Sys="clr-namespace:System;assembly=mscorlib"
        xmlns:ValueConverter="clr-namespace:MatrixSwitcher.ViewModel.ValueConverter"
        xmlns:Model="clr-namespace:Mathematics;assembly=Mathematics"
        mc:Ignorable="d" x:Name="Self"
        DataContext="{Binding ElementName=Self}"
        WindowStyle="None" WindowStartupLocation="CenterScreen"
        Title="矩阵变化器" Height="500" Width="800">
    <WindowChrome.WindowChrome>
        <WindowChrome UseAeroCaptionButtons="False" CaptionHeight="0" ResizeBorderThickness="5"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <ValueConverter:StringToMatrix x:Key="StringToMatrix"/>
        <ValueConverter:MatrixToElementArray x:Key="MatrixToElementArray"/>
        <ValueConverter:TransformStatusToColor x:Key="TransformStatusToColor"/>
        <ValueConverter:StringToMatrixOperator x:Key="StringToMatrixOperator"/>
        <ValueConverter:TransformStatusToVisibility x:Key="TransformStatusToVisibility"/>
        <ValueConverter:DenominatorToVisibility x:Key="DenominatorToVisibility"/>
        <ValueConverter:SizeInformationToIndexArray x:Key="SizeInformationToIndexArray"/>
        <ValueConverter:TransformTipToString x:Key="TransformTipToString"/>
        <Style x:Key="NoBorderButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"/>
                            </Border>
                            <Border x:Name="FocusMask" Background="White" Opacity="0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="FocusMask" Property="Opacity" Value="0.25" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.6*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" MouseLeftButtonDown="Window_Move">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style x:Key="SizeInformationLabel" TargetType="{x:Type Label}">
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="2" />
                        <Setter Property="Foreground" Value="#a0a0a0" />
                        <Setter Property="Background" Value="#f5f5f5" />
                    </Style>
                </Grid.Resources>
                <Label Grid.Row="0" Grid.Column="0" Background="#f5f5f5"/>

                <ItemsControl Grid.Row="0" Grid.Column="1" Background="#f5f5f5"
                              ItemsSource="{Binding Matrix.ColumnSize, Converter={StaticResource SizeInformationToIndexArray}}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="{Binding Matrix.ColumnSize}" Rows="1"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type Sys:String}">
                            <Label Content="{Binding}" Style="{StaticResource SizeInformationLabel}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ItemsControl Grid.Row="1" Grid.Column="0"
                              ItemsSource="{Binding Matrix.RowSize, Converter={StaticResource SizeInformationToIndexArray}}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="0" Rows="{Binding Matrix.RowSize}"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type Sys:String}">
                            <Label Content="{Binding}" Style="{StaticResource SizeInformationLabel}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <Grid Grid.Row="1" Grid.Column="1">
                    <ItemsControl ItemsSource="{Binding Matrix.MainMatrix,Converter={StaticResource MatrixToElementArray}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type Model:RationalNumber}">
                                <DataTemplate.Resources>
                                    <Style x:Key="ElementButton" TargetType="{x:Type Button}">
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                        <Setter Property="FontSize" Value="16" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="White" />
                                        <Setter Property="BorderBrush" Value="{x:Null}" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding Foreground}"
                                                            BorderThickness="{TemplateBinding BorderThickness}">
                                                        <ContentPresenter 
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#f9e483"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataTemplate.Resources>
                                <Button Style="{StaticResource ElementButton}" Tag="{Binding}"
                                    Click="CopyElement_Click">
                                    <Button.ToolTip>
                                        <TextBlock Text="{Binding Value, StringFormat={}{0:0.##########}}"/>
                                    </Button.ToolTip>
                                    <Viewbox>
                                        <Grid Margin="15">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Grid.Resources>
                                                <Style x:Key="SubNumber" TargetType="{x:Type Label}">
                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                    <Setter Property="Padding" Value="0" />
                                                    <Setter Property="FontSize" Value="10" />
                                                </Style>
                                            </Grid.Resources>
                                            <Label Grid.Row="0" Style="{StaticResource SubNumber}"
                                           Content="{Binding Path=Numerator}"/>
                                            <Label Grid.Row="1" Background="Black" Height="1"
                                           Visibility="{Binding Denominator, Converter={StaticResource DenominatorToVisibility}}" />
                                            <Label Grid.Row="2" Style="{StaticResource SubNumber}"
                                           Content="{Binding Path=Denominator}"
                                           Visibility="{Binding Denominator, Converter={StaticResource DenominatorToVisibility}}"/>
                                        </Grid>
                                    </Viewbox>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="{Binding Matrix.RowSize}"
                                 Columns="{Binding Matrix.ColumnSize}">

                                </UniformGrid>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Grid>
            </Grid>
            <Grid Grid.Row="1" Height="30" Background="#3185d4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Sys:String x:Key="DeterminateValue">行列式 = {0}</Sys:String>
                </Grid.Resources>
                <TextBlock Text="{Binding Matrix.Determinate,StringFormat={StaticResource DeterminateValue}}" 
                       Foreground="White" FontSize="14" VerticalAlignment="Center" Margin="20,0"/>
                <Button Grid.Column="1" Content="复制矩阵至剪贴板" Click="CopyMatrix_Click"
                        Style="{StaticResource NoBorderButton}" Foreground="White"/>
            </Grid>
        </Grid>
        <GridSplitter Grid.Column="1" ResizeDirection="Columns" Background="#ffd52c" Width="3"
                      HorizontalAlignment="Stretch"/>
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="#3185d4" MouseLeftButtonDown="Window_Move">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Width="30" Height="30" 
                        Style="{StaticResource NoBorderButton}" Foreground="White"
                        Content="&#x2b80;" Click="SwitchMatrix_Click" ToolTip="交换左右矩阵"/>
                <ListBox Grid.Column="1" BorderBrush="#f0f0f0"  BorderThickness="1,0" Margin="0"
                         Background="Transparent" SelectionMode="Single" SelectedIndex="0" VerticalAlignment="Center"
                         SelectedItem="{Binding Matrix.Operator,Converter={StaticResource StringToMatrixOperator}}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="1"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.Resources>
                        <Style x:Key="ItemStyle" TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Foreground" Value="#ffd52c" />
                            <Setter Property="FontSize" Value="10" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontSize" Value="14" />
                                    <Setter Property="Foreground" Value="#ffd52c"/>
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter Property="FontSize" Value="10" />
                                    <Setter Property="Foreground" Value="#f0f0f0" />
                                    <Setter Property="Background" Value="Transparent" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Resources>
                    <ListBoxItem Content="&lt;" Style="{StaticResource ItemStyle}" ToolTip="左矩阵"/>
                    <ListBoxItem Content="&gt;" Style="{StaticResource ItemStyle}" ToolTip="右矩阵"/>
                    <ListBoxItem Content="+" Style="{StaticResource ItemStyle}" ToolTip="相加"/>
                    <ListBoxItem Content="-" Style="{StaticResource ItemStyle}" ToolTip="相减"/>
                    <ListBoxItem Content="x" Style="{StaticResource ItemStyle}" ToolTip="相乘"/>
                </ListBox>
                <Button Grid.Column="2" Width="30" Height="30" Content="X" 
                        Style="{StaticResource NoBorderButton}" Foreground="White"
                        Click="Window_Close"/>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.Resources>
                    <Style x:Key="MatrixInputBox" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Padding" Value="10"/>
                        <Setter Property="AcceptsReturn" Value="True" />
                        <Setter Property="FontFamily" Value="Consolas" />
                        <Setter Property="FontSize" Value="19" />
                        <Setter Property="Foreground" Value="#303030" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBox  Grid.Column="0" Style="{StaticResource MatrixInputBox}" Background="AliceBlue"
                          Text="{Binding Matrix.Matrix1,Converter={StaticResource StringToMatrix}}"/>
                <GridSplitter Grid.Column="1" Background="Transparent" Width="4" HorizontalAlignment="Center"
                              ResizeDirection="Columns" Margin="-2,0"/>
                <TextBox  Grid.Column="2" Style="{StaticResource MatrixInputBox}" Background="AntiqueWhite"
                          Text="{Binding Matrix.Matrix2,Converter={StaticResource StringToMatrix}}"/>
            </Grid>
            <GridSplitter Grid.Row="2" Height="4" Margin="0,-2" Background="Transparent" 
                          ResizeDirection="Rows" VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"/>
            <Grid Grid.Row="3">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition  Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0"
                             Background="#292929" Foreground="#fafafa"
                             BorderThickness="0" BorderBrush="#606060"
                             FontSize="16" Padding="10" AcceptsReturn="True"
                             TextChanged="TextBox_TextChanged"/>
                    <GridSplitter Grid.Column="1" Width="4" Margin="-2,0" Background="Transparent" HorizontalAlignment="Center"/>
                    <TextBox Grid.Column="2" IsReadOnly="True"
                             Text="{Binding Matrix.TransfromTips,Mode=OneWay,Converter={StaticResource TransformTipToString}}"
                             Background="#303030" Foreground="#fafafa"
                             BorderThickness="0" BorderBrush="AliceBlue"
                             FontSize="16" Padding="10" AcceptsReturn="True"/>
                </Grid>
                <Grid Grid.Row="1" Height="30" 
                       Visibility="{Binding Matrix.TransformStatus,Converter={StaticResource TransformStatusToVisibility}}"
                       Background="{Binding Matrix.TransformStatus,Converter={StaticResource TransformStatusToColor}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="{Binding Matrix.MatrixTransformErrorMessage}"
                       VerticalContentAlignment="Center" Padding="5,0" FontSize="12"
                       FontFamily="Microsoft YaHei UI" Foreground="White"/>
                    <Button Grid.Column="1" Content="?" Style="{StaticResource NoBorderButton}" 
                            Width="30" ToolTip="命令帮助" Click="DisplayHelp_Click"
                            Foreground="White"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
